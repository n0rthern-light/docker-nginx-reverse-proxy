# Redirect HTTP to HTTPS
server {
    listen       80 default_server;
    listen       [::]:80 default_server;
    server_name  localhost;
    return 301   https://$host$request_uri;
}

# php74site
server {
  listen 443 ssl;

  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  ssl_certificate /etc/nginx/ssl/cert.cert;
  ssl_certificate_key /etc/nginx/ssl/key.key;

  server_name php74site.test;

  location / {
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_buffering off;
    proxy_request_buffering off;
    proxy_http_version 1.1;
    proxy_intercept_errors on;

    proxy_pass http://php74site_webserver;
  }

  access_log off;
  error_log  /var/log/nginx/error.log error;
}

# php80site
server {
  listen 443 ssl;

  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  ssl_certificate /etc/nginx/ssl/cert.cert;
  ssl_certificate_key /etc/nginx/ssl/key.key;

  server_name php80site.test;

  location / {
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_buffering off;
    proxy_request_buffering off;
    proxy_http_version 1.1;
    proxy_intercept_errors on;

    proxy_pass http://php80site_webserver;
  }

  access_log off;
  error_log  /var/log/nginx/error.log error;
}


# Default
server {
  listen 443 ssl default_server;

  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  ssl_certificate /etc/nginx/ssl/cert.cert;
  ssl_certificate_key /etc/nginx/ssl/key.key;

  server_name _;
  root /var/www/html;

  charset UTF-8;

  error_page 404 /404.html;
  location = /404.html {
    allow   all;
  }
  location / {
    return 404;
  }

  access_log off;
  log_not_found off;
  error_log  /var/log/nginx/error.log error;
}